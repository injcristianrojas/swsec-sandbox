<p><b>1/31/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.4.3:</p>
	<ul>
		<li>
			Added login.php page to the sqlmap targets in the menu
		</li>
		<li>
			Modified several links to open in new windows/tabs rather than taking over
			main screen
		</li>
		<li>Reduced some unneeded styles</li>
		<li>Added links for Firefox add-ons to home page</li>
		<li>Added link for sqlmap to home page</li>
		<li>
			Added new page with SQLMap practice targets, link
			to video, and new hints section
		</li>
	</ul>
</blockquote>

<p><b>1/26/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.4.2:</p>
	<ul>
		<li>
			Fixed bug in usage instructions and rewrote the instructions.
			Several new features have been implemented.
		</li>
	</ul>
</blockquote>

<p><b>1/21/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.4.1:</p>
	<ul>
		<li>
			Added method tampering vulnerability to 
			register.php
		</li>
		<li>Updated the vulnerabilities.php page</li>
		<li>Added large amounts of help texts to various pages</li>
		<li>
			Added Method Tampering to menu with two pages under this
			vulnerability
		</li>
		<li>Added Poll Question to HTMLi and XSS menus</li>
		<li>Added several pages to several new menu entries</li>
	</ul>
</blockquote>

<p><b>1/13/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.4.0:</p>
	<ul>
		<li>
			Installed popup help text on the images and links of the 
			home page.
		</li>
		<li>Added help button example to home page</li>
		<li>
			Reconfigured home page to try to help user
			understand what to do
		</li>
		<li>Added colorbox jquery plugin to project</li>
		<li>Created jquery-init.inc to hold jquery initialization scripts</li>
		<li>
			Created new class SQLQueryHandler and began experimenting with 
			collecting all queries into this class in preparation for 
			using other brands of databases
		</li>
		<li>
			Created the pop up help context page to act as an AJAX
			backend to the HELP ME buttons being added to the site
		</li>
		<li>
			Added new tables and data to the database to support the 
			new HELP ME buttons for each page
		</li>
		<li>Reduced code for back buttons</li>
		<li>
			Created include file for back button to avoid spamming code on
			all the pages
		</li>
		<li>Created the HELP ME button on each page to tell the user what to try</li>
		<li>Added arbitrary-file-inclusion.php to the XSS header menu</li>
		<li>Updated the vulnerabilities listing</li>
		<li>
			Patched defect in browser-info.php that would return Warnings
			if the system is not connected to the Internet.
		</li>
		<li>
			Added browser-info.php to the HTMLi injection via HTTP headers
			menu
		</li>
		<li>Added large number of pages to the HTMLi menu</li>
		<li>Added captured-data.php to menu under insert based sql injection</li>
		<li>
			Added new page describing a new vulnerability SSL downgrade. The 
			SSL Misconfiguration page has been added to the A9 menu
		</li>
		<li>
			Bug Fix: Repaired link http://localhost/mutillidae/index.php?page=view-someones-blog.php
			in add blog page. Changed to relative link ./index.php?page=view-someones-blog.php to fix link
			when Mutillidae is running on remote server. Also fixed equivalent link from view blog
			page back to add blog page.
		</li>
		<li>Moved insert blog entry query to object oriented class</li>
		<li>Added more hints to the XML entity injection page</li>
		<li>Added new type of cross site scripting injection; via XML injection</li>
		<li>Bug fix in formatting on vulnerabilities.php page</li>
	</ul>
</blockquote>

<p><b>1/11/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.14:</p>
	<ul>
		<li>
		    public function encodeCharacter($input)
		    /* Altered by JD 1/11/2013 to repair error message
		     * which appears because the parent class of this
		     * class declares the same function with a different
		     * signature.
		     * 
		     * Strict Standards: Declaration of Base64Codec::encodeCharacter() should
		     * be compatible with Codec::encodeCharacter($immune, $c) in
		     * /opt/lampp/htdocs/mutillidae/owasp-esapi-php/src/codecs/Base64Codec.php
		     *  on line 130 
		     */
		</li>
		<li>
			Added try-catch to 
			$LogHandler->writeToLog("Attempt to log in by user: " . $username);
			in process login attempt page to prevent error with log handler.
		<li>
		<li>
			Added color coding to user account level displayed in the menu
			at the top of the page
		</li>			
	</ul>
</blockquote>

<p><b>12/08/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.13:</p>
	<ul>
		<li>
			Added validation for valid XML characters in level
			5 of the XML External Entity Injection page in 
			order to detect and block attacks based on
			alternate encodings of XML. Thanks to  
			Nicolas Grégoire (@Agarri_FR) for 
			providing working injections.
		</li>
	</ul>
</blockquote>

<p><b>12/07/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.12:</p>
	<ul>
		<li>
			Repaired bug in XML External Entity Injection page
			/index.php?page=xml-validator.php found by 
			Nicolas Grégoire (@Agarri_FR).
		</li>
		<li>
			Improved error message formatting on
			XML External Entity Injection page
		</li> 		
	</ul>
</blockquote>

<p><b>12/06/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.11:</p>
	<ul>
		<li>Improved formating on User Information page</li>
		<li>Added border radius styling to all fieldsets</li>
		<li>Improved formatting on the error handler messages</li>
		<li>Updated main title on home page</li>
		<li>Redesigned home page layout</li>
		<li>Introduced a new type of vulnerability: XML External Entity Injection</li>
		<li>
			New page added at /index.php?page=xml-validator.php to implement the
			XML External Entity Injection vulnerability
		</li>
		<li>Added hints to XML External Entity Injection page</li>
		<li>Updated vulnerabilities.php page</li>
		<li>
			Added XML External Entity Injection page to header menu at path
			"OWASP Top 10" -- "Other Injection" -- "XML External Entity Injection" 
			-- XML Validator
		</li>
	</ul>
</blockquote>

<p><b>10/26/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.10:</p>
	<ul>
		<li>Added more hints into the user-agent impersonation page</li>
		<li>Moved header, footer, log-visit, and config.inc into "includes" directory</li>
		<li>Added additional link for captured data page to capture data page.</li>
		<li>Updated link for Latest Version of Mutillidae</li>
		<li>
			Added new challenge level to CBC bit flipping. Level 1 presents a new challenge
			to solve
		</li>
		<li>
			Added a new field to the CBC bit flipping. The field has no bearing on winning
			the challenge but provides some theatrics as it changes if the first four bytes of the 
			IV are modified.
		</li>
	</ul>
</blockquote>

<p><b>10/18/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.9:</p>
	<ul>
		<li>Moved the change log file into the documentation folder</li>
		<li>
			Added the JavaScript Object Notation (JSON) pages to the SQL injection
			menu as well as the HTML-5 menu
		</li>
		<li>Fixed bug on capture data page where SQL Injection protection was
		in the wrong place</li>
		<li>Added new global style for success messages</li>
		<li>Corrected CSS errors on Add to your Blog and View Blogs</li>
		<li>
			Added new challenge page named user-agent-impersonation.php
			The goal is to impersonate an iPad fairly closely. Added
			browser fingerprint elements that can be changed by User-Agent
			Switcher and some elements that have to be changed in the 
			browser configuration.
		</li>
	</ul>
</blockquote>

<p><b>09/26/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.8 (KY ISSA Conference Version):</p>
	<ul>
		<li>
			Added JavaScript validation to the user-info.php page. 
			This validation is activated
			in security level 1 and security level 5. The user can
			bypass in various ways including proxy and disabling JS.
		</li>
		<li>
			Added the page visited to the logging script that logs when
			a user visits each page. This makes the logs more realistic.
		</li>
		<li>
			Added the various commands needed when performing command
			injection to open up telnet on a Windows XP host. This applies
			to command injection performed on the "DNS Lookup" page. The 
			file with the example commands is located in 
			/documentation/mutillidae-test-scripts.txt
		</li>
		<li>
			Added the various commands needed when performing command
			injection to open up Windows Remote Desktop Connection
			(Windows Terminal Services) on a Windows XP SP3 host. This applies
			to command injection performed on the "DNS Lookup" page. The 
			file with the example commands is located in 
			/documentation/mutillidae-test-scripts.txt
		</li>
		<li>
			Since the "CurrentBrowser" attribute is not well-supported in 
			browsers, the html-5 web storage page will now set an attribute 
			called AuthorizationLevel to act as a target
		</li>
		<li>
			Refactored the pen test tools lookup page
		</li>
		<li>
			Add new page for attacking AJAX called pen-test-lookup-tool-ajax.php
			The page makes AJAX requests to fetch information about the tool
			selected. This allows the user to attempt to hack an AJAX driven
			request which fetches JSON data.
		</li>
		<li>Added user-info.php page to the "JavaScript Security" menu</li>
		<li>Added new menu for HTML-5/AJAX/JSON related pages and content</li>
		<li>Added hint about mutiilidae test scripts file to the home page</li>
		<li>
			Improved the log file functionality so that if the page variable is
			blank such as in an AJAX request, the page will be fetched from 
			the super global variables.
		</li>
	</ul>
</blockquote>

<p><b>09/15/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.7 (Samurai 2.0 Version):</p>
	<ul>
		<li>Improved detection of incorrect database settings on the set-up-database script.</li>
		<li>
			Added code to make it easier to install on Samurai WTF. The MySQLHandler-&gt;openConnection()
			method will automatically try the password "samurai" if the configured password
			fails.
		</li>
		<li>
			Created installation video for updating NOWASP Mutillidae on Samurai WTF 2.0
			on the webpwnized YouTube Channel.
		</li>
		<li>Cleaned up code in MySQLHandler.php</li>
		<li>
			Added code to set up database page to detect if user fixed errors.
			If the user came from the database error page but we do not have database errors anymore,
	 		send them to the home page.
	 	</li>
	 	<li>Changed font on the database error page</li>
	 	<li>Imporved error handling for database errors in index.php</li>
	</ul>
</blockquote>

<p><b>09/15/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.6 (Samurai 2.0 Version):</p>
	<ul>
		<li>Introduced a bug. Oops. This version superceded by 2.3.7 upon release.</li>
	</ul>
</blockquote>

<p><b>09/03/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.5:</p>
	<ul>
		<li>Added more hints on the secret-administrative-pages.php</li>
		<li>Added NOWASP to Sourceforge Subversion (SVN): https://mutillidae.svn.sourceforge.net/svnroot/mutillidae</li>
		<li>Added cross-site-scripting tutorial to the page arbitrary-file-inclusion.php</li>
		<li>Updated the vulnerabilities.php page with a few dozen more hints about vulns</li>
		<li>Updated comments on config.inc. The file is not used in this project anymore.</li>
		<li>Added more hints to credits.php</li>
		<li>Added cross-site-scripting tutorial to the page document-viewer.php</li>
		<li>Oops. Fixed page title on page secret-administrative-pages.php</li>
		<li>Added new page for directory browsing under A6 - Security Misconfiguration menu</li>
	</ul>
</blockquote>

<p><b>08/13/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.4:</p>
	<ul>
		<li>Added documentation around database configuration area in MySQLHandler.php</li>
		<li>Cleaned up some code in header.php</li>
		<li>Added Enforce SSL functionality for use with SSLStrip. This gives the user a way to force
			Mutillidae to redirect any HTTP requests to HTTPS
		</li>
		<li>Squeezed menu to better fit on low resolution screens</li>
		<li>Added a new button on the side menu for Enforce/Drop SSL</li>
		<li>Added a new button on the top menu bar for Enforce/Drop SSL</li> 
	</ul>
</blockquote>

<p><b>08/13/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.3 (OWASP Broken Web Apps Edition):</p>
	<ul>
		<li>Added additional messages to set up database script to help user diagnoise issues</li>
		<li>Cleaned up code in the set up database script</li>
		<li>
			Altered set up database to allow user to choose the name of the database to be whatever they
			like. This is configured in MySQLHandler.php
		</li>
		<li>
			Set up database script will now output the database name, MYSQL server name, and the username
			at different points in the set up to help the user diagnose configuraton issues
		</li>
		<li>Color coded messages in set up database script to help user identify trouble spots</li>
		<li>Made the database configuration variables static public class properties</li>
		<li>static public $mMySQLDatabaseHost = "localhost";</li>
		<li>static public $mMySQLDatabaseUsername = "root";</li>
		<li>static public $mMySQLDatabasePassword = "";</li>
		<li>static public $mMySQLDatabaseName = "nowasp";</li>
		<li>Added database server host name to output of database-offline to help diagnostics</li>
	</ul>
</blockquote>

<p><b>08/10/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.2 (Codename: Mutillidae):</p>
	<ul>
		<li>
			Added large amount of code to help users who have database issues of some type or users unfamiliar with
			MySQL
		</li>
    	<li>
    		Made change to bubble hint hanlder to return error message if hint retrieval fails rather than allow
    		page to fail
    	</li>
    	<li>Added new page database-offline.php to handle database error</li>
    	<li>Added database error detection to setup scripts</li>
    	<li>
    		Changed how the database connection occurs. The MySQLHandler splits the connection 
	    	to the database server and OWASP10 database into separate steps to help the user have a better
	    	chance of detecting issues. This allows the index.php page to connect later in the process as well.
    	</li>
    	<li>Improved database connection in log handler</li>
    	<li>Changed database configuration to static properties</li>
    	<li>Added method connectToDefaultDatabase() to SQL Handler class</li>
	</ul>
</blockquote>

<p><b>07/27/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.1 (Codename: Mutillidae):</p>
	<ul>
    	<li>Updated vulnerabilities listing</li>
    	<li>Added an entirely new attack on a new page: view-user-privilege-level.php</li>
    	<li>Added view-user-privilege-level.php to main menu under broken session management</li>
	</ul>
</blockquote>

<p><b>07/26/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.3.0 (Codename: Mutillidae):</p>
	<ul>
		<li>Updated project to work with newest XAMPP and LAMP stacks. Last update to 
		stack compatibility was in 2010 for Apache 2.2.x</li>
		<li>Mutillidae now works on XAMPP 1.8: Apache 2.4.2, MySQL 5.5.25a, PHP 5.4.4</li>
    	<li>Corrected error on document viewer</li>
    	<li>Added new page repeater.php with new vulnerability buffer overflow</li>
    	<li>Added new bubble hint for buffer overflow</li>
    	<li>Added new bubble hint HTMLandXSSInjectionPoint</li>
    	<li>Added new vulnerability class for parameter addition</li>
    	<li>Added new hints about parameters addition and buffer overflows</li>
    	<li>Split the A1 menu into SQL injection and non-SQL injection
    	because the section was too large to fit on screen.</li>
    	<li>Updated vulnerabilities listing</li>
	</ul>
</blockquote>

<p><b>07/18/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.2.3 (Codename: Mutillidae):</p>
	<ul>
		<li>
			Made main title and icon smaller to make more room for small displays
		</li>
		<li>Patched bug calling bubble handler on index.php</li>
		<li>Added new vulnerability: frame source injection</li>
		<li>Added new page: document-viewer.php</li>
		<li>
			Added document viewer link to HTTP parameter pollution menu and 
			frame source injection menu
		</li>
		<li>Added document viewer to XSS reflected menu</li>
		<li>Added new page robots-txt.php</li>
		<li>Applied new styles to buttons, inputs, textarea, hints, tutorials, etc.</li>
		<li>Fixed layout issue in credits.php</li>
		<li>Fixed bug in register.php</li>
		<li>opendb.inc and closedb.inc deleted from project</li>
		<li>Imporved code on password generator page</li>
	</ul>
</blockquote>

<p><b>07/16/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.2.2 (Codename: Mutillidae):</p>
	<ul>
		<li>
			Improved error handling and error exception bubbling in the MySQL class to make it 
			easier to diagnose errors in the bubble hint handler.
		</li>
		<li>Imporved bubble handler code via refactoring</li>
		<li>Patched a bug in the show/hide bubble hints</li>
		<li>Converted add-to-your-blog to object oriented MySQLHandler</li>
		<li>Corrected minor error handling bug in browser-info.php</li>
		<li>Added logging to add to your blog to create more opportunity to poison logs</li>
		<li>Added Method switching vulnerability to user poll</li>
		<li>Cleaned up code in user poll</li>
		<li>Fixed cross site scripting vulnerability in user poll when in secure mode (ironic)</li>
		<li>Added logging to user poll</li>
	</ul>
</blockquote>

<p><b>06/15/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP 2.2.0 (Codename: Mutillidae):</p>
	<ul>
		<li>Added balloon tips to help users using jQuery ballons</li>
		<li>Added jQuery to Mutillidae</li>
		<li>Added large amounts of hints to html-5 web storage page</li>
		<li>Added notes and demos from AIDE conference talk to pen test lookup tools page</li>
		<li>Added notes and demos from AIDE conference talk to html-5 storage page</li>
		<li>Added notes and demos from AIDE conference talk to all pages with cross site scripting (click hints to see)</li>
		<li>Made show hints code more efficient</li>
		<li>Fixed the width of the command injection level-2 hints</li>
		<li>Added more comments to index.php</li>
		<li>
			Made it so the "hints" cookie shows all the time rather than only if the user changes the hint
			level
		</li>
		<li>Made is easier for user to hack the hints cookie to make hints appears when hints should not appear</li>
		<li>Regression tested the hints functionality since most of it changed</li>
		<li>
			Syncronized bubble-hints handler with security levels. The bubble hint can change with the security
			level. This provides a foundation for the future.
		</li>
		<li>Created the MySQLHandler class</li>
		<li>Converted bubble hint handler to use MySQLHandler class</li>
		<li>Improved command injection hints on the DNS lookup page</li>
		<li>Cleaned up some code on the DNS lookup page</li>
		<li>
			Converted log file to using the MySQLHandler class instead of the connection previously
			passed on each call to log. This will make logging more simple and faster.
		</li>
		<li>Added getSecurityLevel() method to logging class and the MySQLHandler class</li>
		<li>Made hints routine run faster</li>
		<li>Improved the vulnerabilities listing in vulnerabilities.php</li>
		<li>Improved code on add to your blog</li>
		<li>Switched add to blog page to use object oriented sql handler</li>
		<li>Added toggle-hints to the core controls menu</li>
		<li>Added "show popup hints" options to menu</li>
		<li>
			Tried to move object storage to session so objects are only generated once per session then
			persisted for the remainder of the session. This greatly imporves performance of objects
			plus allows the objects to be persistent (remember things).
			
			Didnt work. PHP cannot persist objects.
		</li>
		<li>Cleaned up code on arbitrary file inclusion page</li>
		<li>Standardized the bubble hint code to make it easy to add new hints</li>
		<li>Added browser-info.php to the JavaScript injection menu</li>
		<li>Fixed a bug in the hints formatting on the browser-info.php page</li>
		<li>Corrected mistakes in the vulnerabilities listing page</li>
		<li>Simplified main menu bar under title at top of each page</li>
		<li>Added logging to the authorization required error page</li>
		<li>Added logging to the capture data page to log the captured data</li>
		<li>Converted the capture data page to use OOP SQL handler</li>
		<li>Added source viewer page to the menu for Failure to Restrict URL access</li>
		<li>Fixed formatting issue on text file viewer</li>
		<li>Fixed some old formatting issues in user info php left over from Mutillidae 1.0</li>
		<li>Fixed code clarity in user info</li>
		<li>Converted user info to use MySQL handler class</li>
	</ul>
</blockquote>

<p><b>05/14/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for NOWASP (Codename: Mutillidae) 2.1.20:</p>
	<ul>
		<li>Changed some color schemes</li>
		<li>
			Bug fix: The html5 key validation on the on the html5 page was too restrictive. The validator 
			was throwing errors even when the input was ok. This validation checks for any non-alphanumeric
			characters and prints an error if non-alphanumeric characters are found. This error message contains the bad key
			the user input. Since the site fails to output encode this error message, it is possible to perform DOM injection.
		</li>
		<li>Add the html5-storage.php to the vulnerabilities listing.</li>
		<li>Bug Fix: Fixed a bug in pen-test-tool-lookup.php for security level 5 in which the page would throw
			an error upon submitting the tool to look up.
		</li>
	</ul>
</blockquote>

<p><b>05/13/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.19:</p>
	<ul>
		<li>
			Fixed broken link to https://addons.mozilla.org/en-US/firefox/collections/jdruin/pro-web-developer-qa-pack/ (Mozilla Add Ons)
			on the "Resources" sub-menu.
		</li>
		<li>
			Added "validation" to the html5 storage page for the "key" field. This validation checks for any non-alphanumeric
			characters and prints an error if non-alphanumeric characters are found. This error message contains the bad key
			the user input. Since the site fails to output encode this error message, it is possible to perform DOM injection.
		</li>
		<li>
			Added a large number of HTML 5 based exploits to the Mutillidae-Test-Scripts.txt file. Approximately 100 lines
			of new demonstration code has been added.
		</li>
		<li>
			On the setup or reset database page, if no errors were detected, the page now sends
			the user back to the page that requested the database be reset. A popup box
			gives the user the option to stay on the page.
		</li>
	</ul>
</blockquote>

<p><b>03/15/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.18:</p>
	<ul>
		<li>The setup datebase page now clears HTML 5 Local and Session Storage</li>
		<li>Fixed alignment issues with icons on the captured-data page.</li>
		<li>
			Partially protected capture-data.php page so that the page can capture
			values that cause SQL injection. Other fields are left unprotected so
			users can practice sending SQL injections.
		</li>
		<li>Added timestamp to records captured in the captured-data.txt text file</li>
		<li>
			Added script to home page to add a value to HTML 5 storage when user visit the site.
			This will give users a web storage target to go after even if they dont visit the 
			HTML 5 storage page.
		</li>
		<li>
			Coverted log-visit.php from using the hitlog table to using the 
			LogHandler class. This will help consolodate code into a single
			point of failure for the logging process. All the code has been removed
			from log-visit.php except a call to the LogHandler.
		</li> 
		<li>Adjusted top horizontal menu padding to move buttons closer together</li>
		<li>
			Added two new buttons to the top horizontal menu to allow user to get
			to the view log page and the view captured data page easier.
		</li>
		<li>
			Removed the gethostbyaddr() function from the LogHandler to prevent the 
			long timeouts associated with the function when the DNS server is not
			available. If PHP changes so that the function has a timeout setting
			it will be brought back.
		</li>
		<li>
			Changed delete icon from jpeg to a transparent PNG so the icon can be put inline
			to the table headers to save space.
		</li>
		<li>Added delete log button to the show log page.</li>
		<li>Rearranged the buttons on the show logs page, added new icons, and cleaned up the code</li>
		<li>Added new information output about numner of records found to view logs page</li>
		<li>Made the buttons on the captured data page smaller to free up some space.</li>
	</ul>
</blockquote>

<p><b>03/08/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.17:</p>
	<ul>
		<li>
			Added new menu items for DOM injection and Cookie injection.
		</li>
		<li>Added a delete captured data button to the captured data page</li>
		<li>
			Added new sub-menus to the cross site scripting menu for persistent
			and reflected cross site scripting. The pages to which the links point
			are existing pages but the new menus will help new users locate targets
			for these types of cross site scripting.
		</li>
		<li>Added large number of proven scripts to the Mutillidae-Test-Scripts.txt file</li>
		<li>Added link on View Blog Entries back to Add to Your Blog</li>
		<li>Added link on Add Blog Entries back to View Blogs</li>
		<li>Fixed typo on HTML 5 storage page</li>
		<li>Added delete buttons to the HTML 5 web storage page to help testing</li>
	</ul>
</blockquote>

<p><b>03/01/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.16:</p>
	<ul>
		<li>
			Additional hints added to HTML5 Web Storage page to overwrite 
			current web storage
		</li>
		<li>
			Additional hints added to HTML5 Web Storage page concerning reading
			current web storage. Added code examples for document.write and
			using Firebug command line.
		</li>
		<li>
			Added several new items to the Easter Egg file Mutillidae-Test-Scripts.txt
		</li>
		<li>
			New vulnerability added. The HTML5 Storage page now has cross site
			scripting via DOM injection. The "storage key" field is vulnerable.
		</li>
		<li>Added hints about DOM injection to the HTML5 Storage page.</li>
		<li>Added hints to the capture-data.php page about cross site scripting</li>
		<li>Updated the vulnerabilities listing</li>
	</ul>
</blockquote>

<p><b>02/11/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.15:</p>
	<ul>
		<li>
			Upgraded the "JavaScript Validation" for the dns-lookup.php page. The 
			JavaScript validation is only activated in security level 1. The new
			validation checks for cross-site scripting characters in addition to
			OS command injection characters.
			
			The validations are trivial to defeat by disabling JS in the browser 
			or using an interception proxy to bypass the validation.
		</li>
		<li>
			In security level 1, on page add-to-your-blog.php the CSRF token
			is now generated. The token is predictable although perhaps not
			obvious. The intention is for students to use Burp-Suite 
			sequencer to discover the pattern and inject the next token in
			the sequence (or to subtract each token from the last token).
		</li>
		<li>
			The CSRF token generator for the add-to-your-blog.php page is 
			now using the OWASP Randomizer to generate random tokens
			in security level 5. The previous generator used mt_random()
			which was not really random.
			
			These new tokens have an entropy of around 132 bits.
		</li>
	</ul>
</blockquote>

<p><b>01/30/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.14:</p>
	<ul>
		<li>
			Made menu smaller width. Menu is 10% of screen now. This should
			help when using mutillidae on a classroom projector showing at 
			1024 x 768.
		</li>
		<li>Made Banner 2.5% less tall. Gotta make some room people.</li>
		<li>Fixed formatting bug in dns-lookup.php that made hints look funny</li>
		<li>
			Added lots of new advanced examples to the Easter Egg file called Mutillidae-Test-Scripts.txt.
			The file is located in the documentation folder.
		</li>
		<li>
			Password Generator (password-generator.php): Fixed bug by removing brackets
			from possible characters that will be used to make password.
		</li>
		<li>
			Added new field to accounts: Boolean is_admin. 
		</li>
		<li>
			Added concept of administrative users and regular users
		</li>
		<li>
			Added new vulnerability. There are secret pages that can be brute forced using
			a brute forcing tool like DirBuster or Burp-Intruder. Using Burp-Intruder
			try cycling through the "page" parameter with common names for secret pages.
			For example, try secret.php.
		</li>
		<li>Fixed typo on page not found page</li>
		<li>Created authorization required page</li>
		<li>Added "Secret" Administrative Pages to menu under A8 - Failure to Restrict URL Access</li>
		<li>Made menu item for Robots.txt more obvious</li>
		<li>Fixed typo on vulnerabilties documentation</li>
		<li>"Logged in user" now says "logged in admin" if the logged in user is an admin
		<li>Updated accounts created as targets</li>
		<li>Improved output formatting on phpinfo.php page</li>
		<li>
			Altered phpinfo.php so that admins can see page in any level but regular users
			can only see page in security levels 0 and 1.
		</li>
	</ul>
</blockquote>

<p><b>01/10/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.13:</p>
	<ul>
		<li>Added Mutillidae YouTube channel link to menu</li>
		<li>Fixed some menu links so they open in new window</li>
		<li>
			Added a hint to the framer.php page telling the user to try to
			change the security level.
		</li>
		<li>
			Added a new page called anti-framing-protection.inc. The page
			shows developers how to implement old-style javascript frame busting code.
			This isn''t used for new browsers because x-frame-options has supplanted the
			frame busting code, but there are still many old browsers running
			in kiosks and such.
		</li>
		<li>Added more documentation in the Easter Egg file Mutillidae test scripts</li>
		<li>Added Kevin Johnson as honorary default user</li>
		<li>Added more values to default database to make SQL injection more interesting</li>
		<li>Reduced the size of the header thickness to make more room</li>
		<li>Greatly improved SQL Injection tutorial or at least typed a lot more stuff</li>
		<li>
			Upgraded the Easter Egg file with more tips and tricks; mainly on
			SQL injection
		</li>
	</ul>
</blockquote>

<p><b>01/09/2012</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.12:</p>
	<ul>
		<li>
			Changed sort order for captured-data.php to descending by date so last capture 
			floats to top
		</li>
		<li>Added a refresh button to the captured-data.php page</li>
		<li>Added all the latest pen-testing scripts to the easter egg file Mutillidae-Test-Scripts.txt</li>
		<li>Improved the hints on the HTML5 Storage page</li>
		<li>Oops. Fixed bug in HTML5 storage PHP page.</li>
		<li>Upgraded code in process-login-attempt.php pointed out by Josep Duran</li>
		<li>
			Fixed a bug on add-to-your-blog.php in the CSRF code which would not allow a
			new blog to be saved. Bug found by by Josep Duran.
		</li>
		<li>Made the table output on add-to-your-blog.php look nicer.</li>
		<li>Got rid of unneeded commented out code on set-background-color.php</li>
		<li>Improved output readability on dns-lookup.php</li>
		<li>Improved output readability on set-background-color.php</li>
	</ul>
</blockquote>

<p><b>12/27/2011</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.11:</p>
	<ul>
		<li>
			Added more tools to pen-test-tool-lookup.php.
		</li>
		<li>
			Added lots of HTML5 attacks to the easter egg file Mutillidae-Test-Scripts.txt
		</li>
		<li>
			Added new page capture.php which captures any information sent to the page
			in GET or POST parameters and saves them to a database table. Can be used
			to capture cookies, session storage, local storage, or other data. The page is 
			designed to reflect the capture cookie page used in the SANS 542 Web Application
			Pen Testing course currently taught by Kevin Johnson of SecureIdeas.
			
			This page is designed to capture any parameters sent and store them in a file 
			and a database table. It loops through the POST and GET parameters and records 
			them to a file named captured-data.txt. On Windows system, the file should be 
			found at C:/xampp/htdocs/mutillidae/captured-data.txt. The page also tries to 
			store the captured data in a database table named captured_data. There is 
			another page named captured-data.php that attempts to list the contents of 
			this table.
		</li>
		<li>
			Added new page captured-data.php which displays data captured by page
			capture.php. In true Mutillidae fashion, this page is as vulnerable as
			all the others. Try hacking the hacker by sending SQL injections and XSS
			to the capture.php.
		</li>
		<li>
			Changed includes for database configuration to require_once so that
			some pages can stand alone or work with index.php
		</li>
		<li>Added a new table to the database called captured_data</li>
		<li>Added better comments to index.php</li>
		<li>Added data capture pages to menu under "Other"</li>
		<li>
			Added detailed tutorials to the HTML5 storage page and the pen-test-tools.php
			page showing how to pen-test and exploit HTML5 storage and perform JSON
			injections. To see the new hints sections browse to the pages and click
			the hints button. The hints show at the bottom of the page.
			The HINTS button is on the menu at the top of the screen.
		</li>
	</ul>
</blockquote>

<p><b>12/17/2011</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.10:</p>
	<ul>
		<li>
			Added menu item for the BACK buttons that are on all the pages. They are
			injectable to cause XSS. The menu item is located under OWASP Top 10 --&gt;
			A2 - Cross Site Scripting (XSS) --&gt; Via HTTP Headers --&gt; Those BACK Buttons.
			Any page will do. I just picked one at random.
		</li>
		<li>
			Corrected some errors in the HTML5 storage hints. You have to enable HINTS level 1
			to see the hints. The HINTS button is on the menu at the top of the screen.
		</li>
		<li>
			Renamed setupreset.php to set-up-database.php
		</li>
		<li>Fixed a nasty bug in view someones blog where the dropdown was missing names of bloggers</li>
		<li>Fixed a minor formatting bug in html5-storage.php</li>
		<li>Adjusted the graphics on the home page</li>
		<li>
			Added a new page pen-test-tool-lookup.php. This page is vulnerable to JSON injection.
			A large tutorial was added as well showing how to perform JavaScript XSS injection
			into the JSON data so that the XSS executes.
			To see the tutorial, click the HINTS button. As an exercise, the user is encouraged
			to perform a JSON string injection and an HTML injection after learning how to
			perform the XSS injection. The JSON has been carefully designed to make it relatively
			easier to get the JSON injection to work. JSON injection can be somewhat tricky 
			if a user has not tried it before and/or does not use JSON in web applications.
			The HINTS button is on the menu at the top of the screen.
			The page is also vulnerable to SQL injection, HTML injection, 
			and JSON string injection in addition to XSS.
		</li>
		<li>
			The next step will be to add defenses to pen-test-tool-lookup.php. There will
			be a level 1 defense and a level 5 defense. The level 1 will just be
			JavaScript validation. Level 5 defense will be more robust and
			hopefully difficult to defeat. This will be release 2.1.11 or later.
		</li>
	</ul>
</blockquote>

<p><b>12/16/2011</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.9:</p>
	<ul>
		<li>
			Added a large cross site request forgery tutorial. To access the tutorial, the HINTS
			have to be on level 2.
		</li>
		<li>
			Adding better formatting to the Cross Site Scripting Tutorial
		</li>
		<li>
			Updated the menu to point the user to two pages which are vulnerale to CSRF
		</li>
	</ul>
</blockquote>

<p><b>12/15/2011</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.8:</p>
	<ul>
		<li>
			Bug fix: The links on the front home page were absolute instead of
			relative. This was not an issue in XAMPP installations but caused
			an issue when installed on Samurai because Samurai uses
			http://mutillidae as Mutillidae's URL while XAMPP just uses
			http://localhost. The links should have been relative anyway.
		</li>
	</ul>
</blockquote>

<p><b>11/26/2011</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.7:</p>
	<ul>
		<li>
			Added a new page for HTML5 storage. The page is meant to show how to both use 
			and attack HTML5 storage. The page supports Local and Session storage types.
			The user can attack the storage in two contexts. They can act as if they want 
			to read to contents of their own browsers session storage to see if the 
			developer put authorization tokens or other items into the storage.
			They can also try to use XSS to steal the session storage. In this use-case
			the user would be acting as if they wanted to read someone elses storage.
			A large number of hints has been added to the page. The page name is 
			"html5-storage.php" and can be accessed from the Cross Site Scripting menu
			and information leakage menu. In security level zero, the page has no defenses.
			In level 1, the page will use trivial JavaScript validation. In security level 5,
			the page will refuse to put the secrets in client side storage.
		</li>
	</ul>
</blockquote>

<p><b>11/13/2011</b>: Jeremy Druin / Kenny Kurtz</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.6:</p>
	<ul>
		<li>
			Enhanced the .htaccess file to automatically disable magic quotes on systems 
			which enable them by default (such as some OSX versions of PHP)
		</li>
		<li>
			Fixed some bugs in the phpinfo.php file that made the page display weird.
		</li>
		<li>
			Enhanced the hidden PHPINFO page so that it would work if the user
			browsed to http://localhost/mutillidae/index.php?page=phpinfo.php
			or to http://localhost/mutillidae/phpinfo.php. This example assumes
			Mutillidae is running on localhost.
		</li>
		<li>
			Fixed a bug in index.php that kept the log-visit page from being included.
		</li>
		<li>
			Fixed a bug in log-visit.php that kept the page from working.
		</li>
		<li>
			Fixed installation instructions format for IE 8 not in compatibility mode.
		</li> 
	</ul>
</blockquote>

<p><b>11/10/2011</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.5:</p>
	<ul>
		<li>Added vuln to login sequence. Now a cookie is created with username. Students should try to XSS 
		the cookie and see what happens. Also try a response splitting attack because a cookie is an HTTP 
		header.
		</li>
		<li>Created new twitter feed to make Mutillidae announcements
		 and other web vulnerability tweaks. @webpwnized
		</li>
		<li>
			Fixed installation instructions format for IE 8 not in compatibility mode
		</li> 
	</ul>
</blockquote>

<p><b>10/14/2011</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.4:</p>
	<ul>
		<li>Moved usage instructions and php errors from the home page to their own pages.</li>
		<li>In insecure mode, changed the method of the user-info.php page to GET in order to make it easier
			to use sqlmap against Mutillidae. sqlmap supports POST but it is easier to use with
			GET.
		</li>
		<li>Added hints about sqlmap to sql injection tutorial and to the easter egg file</li>
		<li>Added a credit card table as a target in the database</li>
		<li>Confirmed that the view-blog table can be attacked with sqlmap. The answer is in the Easter Egg file.</li>
		<li>Updated the SQL injection tutorial file</li>
	</ul>
</blockquote>

<p><b>10/13/2011</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.3:</p>
	<ul>
		<li>
			Fix a bug. If the user was on the home page, without having clicked any
			link to this point (such as when using a bookmark), then the user clicked the 
			"change security level", the page would redirect to page not found.
		</li>
		<li>Increased the slide time for the ddsmoothmenu to make it slow down a little bit</li>
		<li>Added a NEW vulnerability. Many sites have crazy pages that show server settings, expose
			admin functionality, allow configuration, or other features a user should not be able to 
			see. The problem is not the pages themselves so much as the fact that developers think
			no one will guess the name and browse to them. Shoulder surfing, guessing, brute-forcing, etc
			can be used to find these pages. Mutillidae now has such a page. It is in the 
			"Server Misconfiguration" category. See secret-administrative-pages.php for hints.
		</li>
		<li>Augmented the installation instructions</li>
		<li>Added link to ihackcharities to front page</li>
	</ul>
</blockquote>

<p><b>09/25/2011</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.2:</p>
	<ul>
		<li>
			Added a new security level. Now there is security level 1. The only difference
			in this release between level 0 and level 1 is that level 1 has JS validation.
			The JS validation has been in place for a while to allow but was activated in
			level 0. Since level 0 is supposed to be very easy, the decision was made
			to create level 1 and move JS validation to level 1. The JS validation is
			trivial to bypass. Simply disable JS or use a proxy such as Tamper Data,
			Paros, Burp, WebScarab, or others.
		</li>
		<li>Page homenotes.php has been merged with home.php.</li>
		<li>Page home.html has been renamed home.php</li>
		<li>Added protection for SQL injection to add to your blog.php output of the 
			current users blog entries. Prior to this patch, you could SQL inject 
			in security level 5 by putting your injection in the current users
			login name because the query uses the current users login name as the input
			to the query.
		</li>
		<li>Improved the DNS lookup page to add JS validation in security level 1 mode.</li>
		<li>Changed padding for BACK button to use styles rather than HTML BR tags.</li>
		<li>Changed the password generator password length to 15 to set a better
			example.</li>
		<li>Some refactoring on user-info.php and login.php to clean up code</li>
	</ul>
</blockquote>

<p><b>09/16/2011</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.1.1:</p>
	<ul>
		<li>
			Added CSRF Protection to page add to your blog. This only works in secure
			mode.
		</li>
		<li>Added more scripts to the easter egg file (Mutillidae Test Scripts)</li>
		<li>Bug fix: The setupandreset.php errors were not printing out.</li>
		<li>Stupid bug fix: Removed the "open DB" that was firing before the database was actually created.</li>
		<li>Created output on page setupandreset.php to show what happened</li>
		<li>Added try/catch and more error handling to setupandreset.php</li>
	</ul>
</blockquote>

<p><b>08/31/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.1.0:</p>
	<ul>
		<li>
			Fixed error on page add to your blog. Input user was not escaped or encoded in secure mode.
		</li>
		<li>
			Major change. The MYSQL connection has been changed from procedure mysql_ functions to using
			object oriented instances from the class mysqli. mysqli became available in PHP 5.3.0
			and is brand new to Mutillidae. There is a high chance of error. Please let me
			know if there are bugs found. This new class gives us many new abilities
			including the ability to call stored procedures without using concatenation. This 
			change affects the entire project and changes the capabilities of the project
			which is why the minor version was updated.
			
			All of the database code has been ripped out and replaced from the ground up. Next will
			be to add stored procedures and views to the database. When SQL injection is done on
			meta data, there will be many more targets. Users will be able to steal the source code
			from views and procs during pen tests along with dumping tables.
		</li>
		<li>Added row number to output on add to your blog</li>
		<li>Added logging for successful and failed login attempts.</li>
		<li>Fixed bug in closing bold tag tokenizer on add to your blog</li>
		<li>
			Updated page arbitrary-file-inclusion.php. 
			Now you can practice making arbitrary system files load. The fun never ends.
		</li>
		<li>
			Added SQL injection defenses to closedb.inc. This may not make much sense unless
		you know that closedb.inc logs to the hitlog table. Part of what it logs is user agent
		and referer which are controls by the user.
		</li>
		<li>Create new page log-visit.php which logs each request to the server. This page
		could be used to poison the log with XSS or SQL inject the database.
		</li>
		<li>Fix bug on dns-lookup.php that allowed the log to be injected even in secure mode.</li>
		<li>Add new page vulnerabilities.php that document the vulnearbilities on each page to help
		users know what to try</li>
		<li>Renamed home.htm to home.html for compliance with convention</li>
		<li>Reconfigured index.php to open database as late as possible</li>
		<li>Refactored opendb.inc to use standard error handling like rest of site. Page
		size is much smaller as a result</li>
		<li>Added a new XSS vulnerability to page user-info.php. This can be exploited by inputing scripts
		into the username field.</li>
		<li>Added row count output to the show-log.php page</li>
		<li>Fixed back button so it doesnt span entire width of the page</li>
		<li>Added error output to page register.php. In insecure mode, the user can get a lot
		of information about the insert. In secure mode, we keep that to ourselves.</li>				 
	</ul>
</blockquote>

<p><b>08/19/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.13:</p>
	<ul>
		<li>
			Added a new page called password-generator that allowed the user to practice HTML injection,
			cross site scripting, and JavaScript injection. The page is primarily intended
			to practice the JS injection in as easy a way as possible.
		</li>
	</ul>
</blockquote>

<p><b>07/24/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.12:</p>
	<ul>
		<li>
			Changed the label of the link to "Cross Site Framing" to "Click-Jacking"			
		</li>
		<li>
			Created a new page to frame the Mutillidae site so we can practice
			Cross-Site Framing. Added a menu item under 
			Other --&gt; Information Leakage --&gt; Cross-Site Framing.
			In secure mode, Mutillidae does not allow itself to be framed by
			third party sites. Enjoy.
		</li>
		<li>
			Created a new menu path for "Missing HTTPOnly Attribute" because
			it doesn't really fit directly into a XSS exploit. It is a 
			misconfiguration that leads to an exploit.
		<li>
			Created a new page to talk about the site footer displaying the
			user agent string. The new page includes hints.
		</li>
		<li>Refactored footer.php to remove database closing code. This code is in index.php now.</li>
		<li>
		Added new vulnerability for remote file inclusion. 
		Access via "A4 - Insecure Direct Object References" --&gt; "Arbitrary File Incusion".
		Enjoy!
		</li>
	</ul>
</blockquote>

<p><b>07/17/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.11:</p>
	<ul>
		<li>
			Oops! Fixed a bug in the secure code which (ironically) did not 
			stop the command injection as long as the attacker chained the attack
			with a validly formed IPV4 address. I forgot to put the starts-with
			and ends-with symbols on the RegEx.
		</li>
		<li>
			Added IPV6 pattern as a valid pattern on page dns-lookup.php. The 
			page will accept IPV6, IPV4, or Domain Name.
		</li>
		<li>Made some cosmetic improvements to the dns-lookup.php page</li>
		<li>
			Added a whole new batch of fun. Mutillidae now supports (and defends)
			against Cascading Style Injection. Enjoy.
		</li>
	</ul>
</blockquote>

<p><b>07/09/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.10:</p>
	<ul>
		<li>Added new vulnerability HTTP Parameter Pollution on page user-poll.php</li>
		<li>
			Added defense for JavaScript injection in the "Back" buttons.
			In secure mode, Mutillidae will encode the HTTP Referer header using
			JavaScript encoding
		</li>
	</ul>
</blockquote>

<p><b>06/21/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.9.1:</p>
	<ul>
		<li>Added new menu items under SQLi for SQLi Insert Injection</li>
		<li>Added new menu item for documentation</li>
		<li>Moved constants into constants.php file</li>
		<li>Patched tabbing in home.htm</li>
		<li>Added additional instructions on supressing PHP errors with XamppLite. Thanks to Miguel 
		Wherner for the tip.</li>
		<li>Added more hints to command injection page</li>
		<li>Updated the Easter egg file</li>
		<li>Added "Bookmark This Site" button to the resources tab in the menu</li>
		<li>Added lots more default users</li>
		<li>
			Added a stored procedure for users to attempt to extract the source
			code using SQL injection
		</li>
		<li>Added a stored procedure to support logins so we can start
		to put real security into this thing.</li>
		<li>Added new article "How to Access Mutillidae over Virtual Box Host Only Network"</li>
		<li>Introduced a new vulnerability: JavaScript Injection</li>		
	</ul>
</blockquote>

<p><b>06/15/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.8:</p>
	<ul>
		<li>
			Added more comments to the code to explain how defenses work</li>
		<li>
		Added support for the &lt;u&gt;&lt;/u&gt; tag to the blog. In secure mode Mutillidae will allow this tag
		but still safely encode output and stop XSS.</li>
		<li>
		Added JavaScript filtering to prevent single quotes from being entered in blog entries. This give practice 
		bypassing JavaScript "security" and helps the user understand JavaScript cannot provide security.
		</li>
		<li>
			Added lots of JS filtering to login.php. Nearly all characters are filtered. Users are encouraged
			to understand that JavaScript and filtering are useless for security.
		</li> 
		<li>Added autofocus to login.php and add-to-blog.php</li>
		<li>
			Added more "allowed dangerous HTML tags" to the blog. Until now only the bold HTML tag was supported. Also
			the output was not HTML5 compliant. For example, if the user entered a bold tag, then a bold tag was output
			however the bold tag is depreciated. Styles must be used. So Mutillidae allows the user to input
			a bold tag but will correctly encode this as a sytle upon output. The italic tag is now supported
			as a dangerous input which is safely output without fear of Cross Site Scripting. These defenses
			only operate in secure mode of course. In insecure mode, the site allows any input and simply outputs
			whatever is input without any encoding.
		</li>
		<li>
			Changed menu for OWASP A1 - Injection to differentiate between SQL, HTML, and Command Injection. This should make
			it more clear which pages exhibit vulnerabilities with the specific injecton sub-types. Also added new link for 
			Blind SQL Injection.
		</li>
		<li>
			Changed menu for OWASP A2 - Cross Site Scripting to differentiate between XSS coming in via user supplied fields 
			(GET/POST) and values within HTTP Request Headers.
		</li>
		<li>
			Added tutorials feature.
		</li>
		<li>Added SQL Injection Totorial</li>
		<li>Added Cross Site Scripting tutorial</li>
		<li>Added Command Injection tutorial</li>		
		<li>
			Added new feature. Hints can now be at different levels. Each time the user clicks Hints, the level increases by 1 until rolling over.
		</li>
		<li>Removed the installation instructions from the home page. A new page for instructions is created and linked from the menu.
		<li>
			Augmented the installation instructions to include running from Samurai, creating a custom ISO, installing 
			to XAMPP, and running in virutal machines.
		</li>
		<li>Reformatted install instructions and main home page to be compliant with HTML 5</li>
	</ul>
</blockquote>

<p><b>05/20/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.7:</p>
	<ul>
		<li>
			Added a new page rene-magritte.php to explore click-jacking.
			
			In secure mode, Mutillidae will send the X-FRAME-OPTIONS: DENY
			header. In modern browsers, this will cause the browser to throw an
			error rather than allow the page rene-magritte.php to be framed.
		</li>
		<li>
			Added a resources link to the main menu. Links are to information
			or tools that can help with testing Mutillidae.
		</li>
		<li>
			Added new class LogHandler to take over logging. Previously
			logging statements has to be copied to each spot that logging
			was needed. With the new class, logging requires only one
			line of code and the logger automatically logs based on the 
			current security level. If in insecure mode, no attempt
			to stop XSS or SQLi is made.
			
			With the new class, many less lines of code are needed and many
			more places log. With more places logging, there is a much better
			chance of finding a log exploit and taking advantage (insecure mode).
			
			Logging added to pages: add-to-your-blog, dns-lookup, text-file-viewer,
			source-viewer.php, register.php, redirectandlog.php, and user-info.php
		</li>
		<li>
			Added more default users to initial setup to give more targets.
		</li>
	</ul>
</blockquote>

<p><b>05/10/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.6:</p>
	<ul>
		<li>
			Added a new security vulnerability and counteracting secure code.
			The "business requirements" for the add-new-blog-entry page 
			now require users to be able to enter a bold tag
			in their blog.

			In secure mode, Mutillidae allows this functionality while still 
			protecting the users from mallicous injection input.
		</li>
		<li>
			A new secret page has been added. There are lots of test scripts
			that the developers used to hack Mutillidae inside. It will be very hard
			to guess the name of the file but there are plenty of vulns
			that will allow users to locate and open the file.
		</li>
	</ul>
</blockquote>

<p><b>04/22/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.6:</p>
	<ul>
		<li>
			Added a new security vulnerability and counteracting secure code.
			Cookies are unprotected in insecure mode, but in secure mode, the
			cookies will have the HTTPOnly attribute applied to them.
			
			In reality this vulnerability was always in Mutillidae since ignoring
			the issue opens the vulnerability (the ability for scripts to access the
			cookie values). The change is acknowleging this issue and adding the 
			defense. 
			
			Once we get an SSL certificate installed, the next logical step will be to 
			add the "Secure" attribute to cookies in secure mode, but to not
			add this attribute in insecure mode. 
		</li>
		<li>
			Added the X-FRAME-OPTIONS: DENY click-jacking defense in secure mode.
			In insecure mode, the site does nothing and ignores the issue entirely.
			This defense only works in newer browsers and javascript framebusters are
			needed to help older browsers.
		</li>
		<li>Added insecure comments vulnerability and defense. Some developers use 
			HTML or JavaScript comments instead of using the frameworks comments 
			(ASP.NET, Java, PHP, Etc.)
		</li>
		<li>Rearranged instructions on home page to emphasize the PHP.ini 
			configuration changes that are needed to get rid of errors.
		</li>
		<li>Rewrote opendb.inc to have error trapping and custom
			error handling. If there is an error, there will be some diagnistic
			information available.
		</li>
	</ul>
</blockquote>

<p><b>04/14/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.5:</p>
	<ul>
		<li>
			browser-info.php - Patched a bug which disabled entire page if the 
			whois server is not reachable. Now only that one line will be disabled.
			Also replaced Windows style file path slashes with Unix style. Either 
			slash will work in Windows but Linux only accepts the Unix style
			path else throws an error.
		</li>
	</ul>
</blockquote>

<p><b>04/13/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.4:</p>
	<ul>
		<li>
			user-info.php - Added XSS defenses to the output so that users cannot poison 
			their username, password or signature to cause XSS.
			This only works in secure code.
		</li>
		<li>
			register.php - Added XSS defenses to the output so that users cannot poison 
			their username to cause XSS. This only works in secure code.
		</li>
		<li>
			header.php - Added link to this changelog. Changed style of upper header to 
			allow more space for logged in user text. In very small screens, the text was 
			overlapping. Also, the size of the mascot image was reduced to give the user 
			more screen space.
		</li>
		<li>change-log.php - Added new XSS vulnerability for users to try.
	</ul>
</blockquote>

<p><b>03/30/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.3:</p>
	<ul>
		<li>index.php - Added PHP version detection and altered forms caching defenses and 
			server header information defenses to use header_remove() only if the version
			of PHP is at 5.3 or above. Made version string variable that contains whatever
			version string is for Mutillidae plus "nice" output. Samurai is going through
			a PHP version change to 5.3 right now and XAMPP just went through the same change.
			This code is meant to bridge users caught between versions.
		</li>
		<li>
			header.php - Made version output simpler. header.php only outputs the header
			string.
		</li>
		<li>
			footer.php - Added PHP version to footer output in insecure mode. In secure mode, server version is not shown.
		</li>
	</ul>
</blockquote>

<p><b>03/25/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.2 Beta:<br>
	<br>
	Whole site</p>
	<ul>
		<li>Made local relative links without leading dot</li>
		<li>Installed on Samurai 0.95 for testing. Found that Samurai doesnt like the leading dot in local file paths. Those were removed from the index.php page.</li>
		<li>Made version a variable in index.php to make updating version string easier</li>
		<li>Added new forms caching information leakage vulnerability</li>
		<li>Added new vulnerability for X-Powered-By and discussed removing the Server HTTP header in comments</li>
	</ul>
</blockquote>

<p><b>03/23/2011</b>: Jeremy Druin</p>

<blockquote>
	<p>Change Log for Mutillidae 2.0.1 Beta:<br>
	<br>
	Whole site</p>
	<ul>
		<li>Replaced root relative links with local relative links to allow more freedom in root folder name</li>
		<li>Added email address for Jeremy</li>
		<li>Added change log to site</li>
		<li>Added Toggle Hints into core menu but link disappears in secure mode</li>
		<li>Added new failure to restrict URL access vuln</li>
	</ul>
</blockquote>

<p><b>03/23/2011</b>: Jeremy Druin</p>
<blockquote>
	<p>Change Log for Mutillidae 2.0 Beta:<br>
	<br>
	Whole site</p>
	<ul>
		<li>Site implements the OWASP ESAPI API for PHP including showing how to 
		instantiate classes and call methods for output encoding.</li>
		<li>Site now allows user to switch between secure and insecure mode to 
		allow the user to employ an attack then try the same attack against more 
		secure code</li>
		<li>All code for both modes of operation are available for inspection 
		and include large amounts of explanation comments for both the insecure 
		and secure sections. Code is commented in such a way to help developers 
		understand the security concepts as opposed to only seeing the PHP 
		implementation</li>
		<li>Added custom error handling to site which reacts differently 
		depending on security mode</li>
		<li>Site has larger hint sections with more hints included</li>
		<li>Added menuing system for easier navigation</li>
		<li>Added toolbar at top of each page for critical functions (hints, 
		security mode, home page, etc.)</li>
		<li>Converted styles to CSS</li>
		<li>Collected images into single folder</li>
		<li>Added links to helpful tools and sites with more information: OWASP, 
		Toad for PHP, Eclipse PDT, Samurai WTF, and Backtrack 4 R2</li>
		<li>Released new web interface design and navigation for each page</li>
		<li>Installed TRY/CATCH handling in all pages</li>
	</ul>
	<p>add-to-your-blog.php </p>
	<ul>
		<li>additional reflected XSS vuln added</li>
		<li>SQLi vector added</li>
		<li>additional stored XSS vuln added</li>
		<li>demonstrates output encoding</li>
		<li>demonstrates SQLi prevention</li>
		<li>non-input box attack vector added</li>
	</ul>
	<p>browser-info.php</p>
	<ul>
		<li>demonstrates safer JavaScript</li>
		<li>created ClientInformationHandler class to gather client information</li>
		<li>demonstrates output encoding</li>
		<li>added JavaScript attack vector using innerHTML</li>
	</ul>
	<p>credits.php</p>
	<ul>
		<li>added Insecure Direct Object Reference defenses</li>
	</ul>
	<p>dns-lookup.php</p>
	<ul>
		<li>In secure mode, added strong server-side validation for page. Page 
		allows both ip based and DNS name based attacks and includes defenses 
		for both.</li>
	</ul>
	<p>footer.php</p>
	<ul>
		<li>added new attack vector to allow refelected XSS via HTTP headers</li>
		<li>added defenses for input coming from HTTP headers</li>
		<li>added comments encouraging developers to treat ALL input as evil and 
		not just the input boxes they created</li>
	</ul>
	<p>header.php</p>
	<ul>
		<li>Replaced menu with mouseover navagation and updated menu with new 
		attacks</li>
		<li>Added new stored cross site scripting attacks and defenses</li>
		<li>Added code to allow site to ignore user created cookies in secure 
		mode and react to user created cookies in insecure mode</li>
	</ul>
	<p>home.html</p>
	<ul>
		<li>Added instructions</li>
		<li>Added warning about PHP.ini files that come with new XAMPP/PHP 
		versions 5.3 and 6.0 (future)</li>
	</ul>
	<p>homenotes.php</p>
	<ul>
		<li>Created newly formatted hints section</li>
	</ul>
	<p>index.php</p>
	<ul>
		<li>Created new processing framework</li>
		<li>Added the ability to use session storage</li>
		<li>Installed initialization code</li>
	</ul>
	<p>login.php</p>
	<ul>
		<li>added HTML maxlength to allow practice of circumventing trivial and 
		useless HTML based defenses</li>
		<li>Added detection of whether user is currently logged in with new 
		funcitonality. Site will auto-detect when users are logged in and change 
		links appropriately</li>
		<li>Added new reflected XSS vector</li>
	</ul>
	<p>process-commands.php</p>
	<ul>
		<li>new file which collects all &quot;do&quot; commands together</li>
		<li>installed several new attack vectors and defenses based on the &quot;do&quot; 
		commands</li>
	</ul>
	<p>redirectandlog.php</p>
	<ul>
		<li>Created new HTTP parameter pollution attack</li>
		<li>Installed advanced mapping defences with validation</li>
		<li>Installed strong validation defenses</li>
	</ul>
	<p>register.php</p>
	<ul>
		<li>installed SQLi and XSS defenses</li>
		<li>reformatted page with new design and error feedback</li>
	</ul>
	<p>show-log.php</p>
	<ul>
		<li>installed DOS defenses</li>
		<li>added DOS attack vector</li>
		<li>installed tabular output</li>
		<li>added defenses for injection attacks and XSS</li>
		<li>added attack vector against log</li>
	</ul>
	<p>source-viewer.php/text-viewer.php</p>
	<ul>
		<li>Added/augmented attack vectors</li>
		<li>Added new attack vectors to allow loading of local server files</li>
		<li>Filename injection (Insecure Direct Object Reference)</li>
		<li>SQL Injection, (Fix: Use Schematized Stored Procedures)</li>
		<li>Cross Site Scripting, (Fix: Encode all output)</li>
		<li>Cross Site Request Forgery, (Fix: Tokenize transactions)</li>
		<li>Insecure Direct Object Reference, (Fix: Tokenize Object References)</li>
		<li>Denial of Service, (Fix: Truncate Log Queries)</li>
		<li>Loading of Local Files, (Fix: Tokenize Object Reference - Filename 
		references in this case)</li>
		<li>Improper Error Handling, (Fix: Employ custom error handler)</li>
		<li>SQL Exception, (Fix: Employ custom error handler)</li>
		<li>HTTP Parameter Pollution (Fix: Scope request variables)</li>
		<li>Added mapping defenses</li>
	</ul>
	<p>user-info.php</p>
	<ul>
		<li>added SQL and XSS defenses</li>
		<li>added tabular output</li>
	</ul>
	<p>view-someones-blog.php</p>
	<ul>
		<li>installed SQLi and XSS defenses</li>
		<li>installed trivial and useless &quot;tokens&quot; to allow user to bypass HTML 
		code which intends to confuse instead of defend.</li>
	</ul>
</blockquote>
